static const std::vector<msword2md::cpp::String> cmdsync_doc_strings = {
{{termcolor::bold, termcolor::green}, "Description"},
{"\n\n"},
{"Typically, this is the second command called just after init; this command downloads new changes\n"},
{"and updates the working files in your local workspace. If you run repo sync without arguments, it\n"},
{"synchronizes the files for all projects.\n\n"},
{"When you run repo sync, this is what happens to the manifest:\n\n"},
{"* The first time sync is run on a local workspace; nothing should happen since the manifest should\n"},
{"be up to date\n\n"},
{"* If the git repository holding the manifest has local changes, esysrepo will abort the sync\n"},
{"procedure\n\n"},
{"* If the git repository is detached, esysrepo will abort the sync procedure\n\n"},
{"* If no branch was specified and if the current HEAD can be fast-forwarded, the git repository is\n"},
{"fast-forwarded; if it can't, the sync procedure is also aborted\n\n"},
{"* If a branch was specified and if it exists, then it is checkout; otherwise, the same process as\n"},
{"if not branch had been specified is followed\n\n"},
{"And for every git repository found in the manifest, set to be synced, the following happens:\n\n"},
{"* If the git repository is not found in the local workspace, it will be cloned. If a branch were\n"},
{"specified, this branch would be checkout if it exists in this repo\n\n"},
{"* The update procedure starts by checking if there are any changes in the git repository. If\n"},
{"changes are found, esysrepo will abort the sync procedure\n\n"},
{"* If no branch was specified:\n\n"},
{"    * If the git repository is detached, abort\n\n"},
{"    * Do a git fetch on the repository\n\n"},
{"    * Check if possible to fast-forward the HEAD of the local repository. If it can, do it;\n"},
{"otherwise, abort\n\n"},
{"* If a branch was specified and exists, that branch is checkout. Otherwise, handle it as if no\n"},
{"branch had been specified\n\n"},
{{termcolor::bold, termcolor::green}, "Usage"},
{"\n\n"},
{termcolor::cyan, "esysrepo sync [options ...]\n\n"},
{{termcolor::bold, termcolor::green}, "Options"},
{"\n\n"},
{"Available options are:\n\n"},
{"* -- force-sync: overwrite an existing git directory if it needs to point to a different object\n"},
{"directory. WARNING: this may cause loss of data\n\n"},
{"* --job / -j <N>: number of jobs to run in parallel (default: 1)\n\n"},
{"* --folder: the folder where the local workspace is located\n\n"},
{"* --groups / -g <LIST>: the list of groups to sync. The list should be separated by commas and have\n"},
{"not white spaces\n\n"},
{"* --branch / -b <BRANCH>: the branch will be checkout if existing in all targeted git repositories;\n"},
{"otherwise, esysrepo will do a normal sync procedure on all repositories without such branch\n\n"},
{{termcolor::bold, termcolor::green}, "Examples"},
{"\n\n"},
{"To sync the manifest and all git repositories with four parallel jobs:\n\n"},
{termcolor::cyan, "esysrepo sync -j4\n\n"},
{"To sync only the manifest and a given list of groups\n\n"},
{termcolor::cyan, "esysrepo sync -g grp1,grp2,grp3\n\n"},
{"\n\n"},
{"\n"},
{"\n\n"},
};
